---
import Layout from '~/layouts/PageLayout.astro';

const metadata = {
  title: 'Items â€” TNX6',
  ignoreTitleTemplate: true,
};
---

<Layout metadata={metadata}>
  <section class="max-w-6xl mx-auto py-16 px-6 text-white">
    <h1 class="text-4xl font-extrabold text-center mb-12 bg-gradient-to-r from-[#ffda6a] to-[#c29200] bg-clip-text text-transparent drop-shadow-[0_0_10px_rgba(198,164,79,0.5)]">
      Items
    </h1>

    <div id="items-section" class="mb-20"></div>

    <h2 class="text-3xl font-bold mb-8 text-center text-[#f7e6ac]">Loot Tables</h2>
    <div id="loots-section" class="mb-20"></div>

    <h2 class="text-3xl font-bold mb-8 text-center text-[#f7e6ac]">Crafting Recipes</h2>
    <div id="crafting-section"></div>
  </section>

  <script is:inline>
    async function loadData() {
      const res = await fetch('/tnx-site/api/items.json');
      const data = await res.json();

      const itemsSection = document.getElementById('items-section');
      const lootsSection = document.getElementById('loots-section');
      const craftSection = document.getElementById('crafting-section');

      // ITEMS
      const itemsHtml = data.items.map(i => {
        const icons = [];
        if (i.excludeSale) icons.push(`<div class="tooltip" data-tip="Excluded from sale"><iconify-icon icon="mdi:cart-off"></iconify-icon></div>`);
        if (i.excludePurchase) icons.push(`<div class="tooltip" data-tip="Excluded from purchase"><iconify-icon icon="mdi:cart-remove"></iconify-icon></div>`);
        if (i.excludeUsage) icons.push(`<div class="tooltip" data-tip="Cannot be used"><iconify-icon icon="mdi:cancel"></iconify-icon></div>`);
        if (i.itemLimitEnabled) icons.push(`<div class="tooltip" data-tip="Item limit: ${i.itemLimitAmount}"><iconify-icon icon="mdi:numeric-${i.itemLimitAmount}-circle-outline"></iconify-icon></div>`);

        return `
          <div class="bg-black/40 border border-[#c6a44f]/30 rounded-2xl p-6 mb-4 shadow-md flex flex-col gap-2 hover:border-[#f7e6ac]/60 transition-all">
            <div class="flex items-center justify-between">
              <div class="text-xl font-bold text-[#f7e6ac]">${i.text}</div>
              <div class="flex gap-3 text-[#c6a44f] text-xl">${icons.join('')}</div>
            </div>
            <div class="text-sm text-gray-300">${i.description || 'No description'}</div>
            <div class="text-sm text-gray-400">Value: ${i.value ?? 0}</div>
          </div>
        `;
      }).join('');
      itemsSection.innerHTML = `<h2 class="text-3xl font-bold mb-8 text-center text-[#f7e6ac]">Available Items</h2>${itemsHtml}`;

      // LOOT TABLES
      const lootsHtml = data.lootTables.map(t => {
        const items = t.items.map(it =>
          `<li class="flex justify-between text-sm text-gray-300"><span>${it.option}</span><span>${it.value}%</span></li>`
        ).join('');
        return `
          <div class="bg-black/40 border border-[#c6a44f]/30 rounded-2xl p-6 mb-6 shadow-md">
            <h3 class="text-2xl font-bold text-[#f7e6ac] mb-4">${t.name}</h3>
            <ul class="space-y-1">${items}</ul>
          </div>
        `;
      }).join('');
      lootsSection.innerHTML = lootsHtml;

      // CRAFTING
      const craftHtml = data.crafting.map(c => {
        const ingr = c.ingredients.map(i =>
          `<li class="text-sm text-gray-300">${i.amount}x ${i.item}</li>`
        ).join('');
        return `
          <div class="bg-black/40 border border-[#c6a44f]/30 rounded-2xl p-6 mb-6 shadow-md">
            <h3 class="text-2xl font-bold text-[#f7e6ac] mb-2">${c.result}</h3>
            <ul class="space-y-1">${ingr}</ul>
          </div>
        `;
      }).join('');
      craftSection.innerHTML = craftHtml;

      // Tooltip logic
      document.querySelectorAll('.tooltip').forEach(el => {
        const tip = document.createElement('div');
        tip.className = 'absolute hidden bg-black/90 text-[#f7e6ac] text-xs px-2 py-1 rounded-md';
        tip.textContent = el.dataset.tip;
        el.style.position = 'relative';
        el.appendChild(tip);
        el.addEventListener('mouseenter', () => (tip.style.display = 'block'));
        el.addEventListener('mouseleave', () => (tip.style.display = 'none'));
      });
    }

    loadData();
  </script>

  <script src="https://code.iconify.design/iconify-icon/3.0.0/iconify-icon.min.js"></script>
</Layout>
